{
    "sourceFile": "seed.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 134,
            "patches": [
                {
                    "date": 1675781573137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1675781592101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,20 +40,20 @@\n \n   const user = await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n-    email: email\n+    email: email,\n   });\n \n   await e.set(\n     e.insert(e.Password, {\n       hash,\n-      user: user\n+      user: user,\n     }),\n     e.insert(e.UserProfile, {\n       first_name: \"first_name\",\n       last_name: \"last_name\",\n-      user: user\n+      user: user,\n     }),\n   ).run(client)\n \n \n"
                },
                {
                    "date": 1675781643357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,22 +43,25 @@\n     onboarded: false,\n     email: email,\n   });\n \n-  await e.set(\n-    e.insert(e.Password, {\n+\n+  user: e.insert(e.User, {\n+    email: email\n+    password: e.insert(e.UserPassword, {\n       hash,\n       user: user,\n     }),\n-    e.insert(e.UserProfile, {\n+    profile: e.insert(e.UserProfile, {\n       first_name: \"first_name\",\n       last_name: \"last_name\",\n       user: user,\n-    }),\n-  ).run(client)\n+    })\n+  })\n \n \n \n+\n   // ORGANISATION\n   // create an organisation with organisation profile\n   await e\n     .insert(e.Organisation, {\n"
                },
                {
                    "date": 1675781664642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n   });\n \n \n   user: e.insert(e.User, {\n-    email: email\n+    email,\n     password: e.insert(e.UserPassword, {\n       hash,\n       user: user,\n     }),\n"
                },
                {
                    "date": 1675781675769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n // todo\n \n // START SEEDS\n async function seed() {\n-  const email = \"user@tester.com\";\n+  const user_email = \"user@tester.com\";\n   const pass = \"talkmate\";\n   const hash = await bcrypt.hash(pass, 10);\n \n   // const userExisting = e.select(e.User, (u) => ({\n@@ -45,9 +45,9 @@\n   });\n \n \n   user: e.insert(e.User, {\n-    email,\n+    email: email,\n     password: e.insert(e.UserPassword, {\n       hash,\n       user: user,\n     }),\n"
                },
                {
                    "date": 1675781687643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n \n   const user = await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n-    email: email,\n+    email: user_email,\n   });\n \n \n   user: e.insert(e.User, {\n"
                },
                {
                    "date": 1675781697483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   await e\n     .insert(e.AdminPassword, {\n       hash,\n       admin: e.insert(e.Admin, {\n-        email: \"admin@tester.com\"\n+        email: \"admin@tester.com\",\n       })\n     })\n     .run(client);\n \n"
                },
                {
                    "date": 1675781706556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n // todo\n \n // START SEEDS\n async function seed() {\n-  const user_email = \"user@tester.com\";\n+  const email = \"user@tester.com\";\n   const pass = \"talkmate\";\n   const hash = await bcrypt.hash(pass, 10);\n \n   // const userExisting = e.select(e.User, (u) => ({\n@@ -31,23 +31,23 @@\n   await e\n     .insert(e.AdminPassword, {\n       hash,\n       admin: e.insert(e.Admin, {\n-        email: \"admin@tester.com\",\n+        email: \"admin@tester.com\"\n       })\n     })\n     .run(client);\n \n \n   const user = await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n-    email: user_email,\n+    email: email,\n   });\n \n \n   user: e.insert(e.User, {\n-    email: email,\n+    ...\n     password: e.insert(e.UserPassword, {\n       hash,\n       user: user,\n     }),\n@@ -57,8 +57,19 @@\n       user: user,\n     })\n   })\n \n+  await e.set(\n+    e.insert(e.Password, {\n+      hash,\n+      user: user,\n+    }),\n+    e.insert(e.UserProfile, {\n+      first_name: \"first_name\",\n+      last_name: \"last_name\",\n+      user: user,\n+    }),\n+  ).run(client)\n \n \n \n   // ORGANISATION\n"
                },
                {
                    "date": 1675781780881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,20 +44,8 @@\n     email: email,\n   });\n \n \n-  user: e.insert(e.User, {\n-    ...\n-    password: e.insert(e.UserPassword, {\n-      hash,\n-      user: user,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"first_name\",\n-      last_name: \"last_name\",\n-      user: user,\n-    })\n-  })\n \n   await e.set(\n     e.insert(e.Password, {\n       hash,\n"
                },
                {
                    "date": 1675781812745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n   await e\n     .insert(e.AdminPassword, {\n       hash,\n       admin: e.insert(e.Admin, {\n-        email: \"admin@tester.com\"\n+        email: \"admin@tester.com\",\n       })\n     })\n     .run(client);\n \n@@ -44,9 +44,8 @@\n     email: email,\n   });\n \n \n-\n   await e.set(\n     e.insert(e.Password, {\n       hash,\n       user: user,\n"
                },
                {
                    "date": 1675781868248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,14 +32,14 @@\n     .insert(e.AdminPassword, {\n       hash,\n       admin: e.insert(e.Admin, {\n         email: \"admin@tester.com\",\n-      })\n+      });\n     })\n     .run(client);\n \n \n-  const user = await e.insert(e.User, {\n+  const user = e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n   });\n"
                },
                {
                    "date": 1675781895956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,11 @@\n   });\n \n \n   await e.set(\n+\n+    password: e.insert(e.UserPassword, {\n+\n     e.insert(e.Password, {\n       hash,\n       user: user,\n     }),\n"
                },
                {
                    "date": 1675782367753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,11 @@\n   ).run(client)\n \n \n \n+\n+  \n+\n   // ORGANISATION\n   // create an organisation with organisation profile\n   await e\n     .insert(e.Organisation, {\n"
                },
                {
                    "date": 1675782447509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,26 +44,25 @@\n     email: email,\n   });\n \n \n-  await e.set(\n \n+\n+  user: e.insert(e.User, {\n+    created_at: new Date(),\n+    onboarded: false,\n+    email: email,\n     password: e.insert(e.UserPassword, {\n+      hash: hash,\n \n-    e.insert(e.Password, {\n-      hash,\n-      user: user,\n     }),\n-    e.insert(e.UserProfile, {\n-      first_name: \"first_name\",\n-      last_name: \"last_name\",\n-      user: user,\n-    }),\n-  ).run(client)\n+    profile: e.insert(e.UserProfile, {\n+      first_name: \"John\",\n+      last_name: \"Doe\",\n+    })\n+  })\n \n \n-\n-\n   \n \n   // ORGANISATION\n   // create an organisation with organisation profile\n"
                },
                {
                    "date": 1675782452559,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,10 +44,8 @@\n     email: email,\n   });\n \n \n-\n-\n   user: e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n"
                },
                {
                    "date": 1675782469855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,22 +37,21 @@\n     })\n     .run(client);\n \n \n-  const user = e.insert(e.User, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-  });\n+  // const user = e.insert(e.User, {\n+  //   created_at: new Date(),\n+  //   onboarded: false,\n+  //   email: email,\n+  // });\n \n \n   user: e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n     password: e.insert(e.UserPassword, {\n       hash: hash,\n-\n     }),\n     profile: e.insert(e.UserProfile, {\n       first_name: \"John\",\n       last_name: \"Doe\",\n"
                },
                {
                    "date": 1675782476290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,19 +26,9 @@\n   await e.delete(e.Organisation).run(client);\n   await e.delete(e.OrganisationProfile).run(client);\n   await e.delete(e.OrganisationTeam).run(client);\n \n-  // ADMIN\n-  await e\n-    .insert(e.AdminPassword, {\n-      hash,\n-      admin: e.insert(e.Admin, {\n-        email: \"admin@tester.com\",\n-      });\n-    })\n-    .run(client);\n \n-\n   // const user = e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n   //   email: email,\n"
                },
                {
                    "date": 1675782487153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,15 +27,8 @@\n   await e.delete(e.OrganisationProfile).run(client);\n   await e.delete(e.OrganisationTeam).run(client);\n \n \n-  // const user = e.insert(e.User, {\n-  //   created_at: new Date(),\n-  //   onboarded: false,\n-  //   email: email,\n-  // });\n-\n-\n   user: e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n"
                },
                {
                    "date": 1675782514008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,26 @@\n   await e.delete(e.Organisation).run(client);\n   await e.delete(e.OrganisationProfile).run(client);\n   await e.delete(e.OrganisationTeam).run(client);\n \n+  // ADMIN\n+  await e\n+    .insert(e.AdminPassword, {\n+      hash,\n+      admin: e.insert(e.Admin, {\n+        email: \"admin@tester.com\",\n+      });\n+    })\n+    .run(client);\n \n+\n+  // const user = e.insert(e.User, {\n+  //   created_at: new Date(),\n+  //   onboarded: false,\n+  //   email: email,\n+  // });\n+\n+\n   user: e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n"
                },
                {
                    "date": 1675782519353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,20 +44,20 @@\n   //   email: email,\n   // });\n \n \n-  user: e.insert(e.User, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"John\",\n-      last_name: \"Doe\",\n-    })\n-  })\n+  // user: e.insert(e.User, {\n+  //   created_at: new Date(),\n+  //   onboarded: false,\n+  //   email: email,\n+  //   password: e.insert(e.UserPassword, {\n+  //     hash: hash,\n+  //   }),\n+  //   profile: e.insert(e.UserProfile, {\n+  //     first_name: \"John\",\n+  //     last_name: \"Doe\",\n+  //   })\n+  // })\n \n \n   \n \n"
                },
                {
                    "date": 1675782529278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     .insert(e.AdminPassword, {\n       hash,\n       admin: e.insert(e.Admin, {\n         email: \"admin@tester.com\",\n-      });\n+      })\n     })\n     .run(client);\n \n \n"
                },
                {
                    "date": 1675782541263,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       admin: e.insert(e.Admin, {\n         email: \"admin@tester.com\",\n       })\n     })\n-    .run(client);\n+    .run(client)\n \n \n   // const user = e.insert(e.User, {\n   //   created_at: new Date(),\n"
                },
                {
                    "date": 1675782547366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n       admin: e.insert(e.Admin, {\n         email: \"admin@tester.com\",\n       })\n     })\n-    .run(client)\n+    .run(client);\n \n \n   // const user = e.insert(e.User, {\n   //   created_at: new Date(),\n"
                },
                {
                    "date": 1675782567484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,22 +85,22 @@\n       .run(client);\n   }\n \n   //NOTES\n-  await e\n-    .set(\n-      e.insert(e.Note, {\n-        title: \"My first note MODIFIED\",\n-        body: \"Hello, world!\",\n-        user\n-      }),\n-      e.insert(e.Note, {\n-        title: \"My second note\",\n-        body: \"Hello, world!\",\n-        user\n-      })\n-    )\n-    .run(client);\n+  // await e\n+  //   .set(\n+  //     e.insert(e.Note, {\n+  //       title: \"My first note MODIFIED\",\n+  //       body: \"Hello, world!\",\n+  //       user\n+  //     }),\n+  //     e.insert(e.Note, {\n+  //       title: \"My second note\",\n+  //       body: \"Hello, world!\",\n+  //       user\n+  //     })\n+  //   )\n+  //   .run(client);\n \n \n   console.log(`Database has been seeded. 🌱`);\n }\n"
                },
                {
                    "date": 1675782573103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,13 +62,13 @@\n   \n \n   // ORGANISATION\n   // create an organisation with organisation profile\n-  await e\n-    .insert(e.Organisation, {\n-      name: \"checkr\"\n-    })\n-    .run(client);\n+  // await e\n+  //   .insert(e.Organisation, {\n+  //     name: \"checkr\"\n+  //   })\n+  //   .run(client);\n \n \n   // TEMP\n   // COUNTRIES\n"
                },
                {
                    "date": 1675782578682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n   // COUNTRIES\n   const countries = [\n     { name: \"United States\" },\n     { name: \"Canada\" },\n-    { name: \"Mexico\" }\n+    { name: \"Mexico\" },\n   ];\n   for (const country of countries) {\n     await e\n       .insert(e.Country, {\n"
                },
                {
                    "date": 1675782586823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n   ];\n   for (const country of countries) {\n     await e\n       .insert(e.Country, {\n-        name: country.name\n+        name: country.name,\n       })\n       .run(client);\n   }\n \n"
                },
                {
                    "date": 1675782597814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,20 +44,20 @@\n   //   email: email,\n   // });\n \n \n-  // user: e.insert(e.User, {\n-  //   created_at: new Date(),\n-  //   onboarded: false,\n-  //   email: email,\n-  //   password: e.insert(e.UserPassword, {\n-  //     hash: hash,\n-  //   }),\n-  //   profile: e.insert(e.UserProfile, {\n-  //     first_name: \"John\",\n-  //     last_name: \"Doe\",\n-  //   })\n-  // })\n+  user: e.insert(e.User, {\n+    created_at: new Date(),\n+    onboarded: false,\n+    email: email,\n+    password: e.insert(e.UserPassword, {\n+      hash: hash,\n+    }),\n+    profile: e.insert(e.UserProfile, {\n+      first_name: \"John\",\n+      last_name: \"Doe\",\n+    })\n+  })\n \n \n   \n \n"
                },
                {
                    "date": 1675782686370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,29 +37,30 @@\n     })\n     .run(client);\n \n \n-  // const user = e.insert(e.User, {\n-  //   created_at: new Date(),\n-  //   onboarded: false,\n-  //   email: email,\n-  // });\n+    await e.insert(e.User, {\n+      created_at: new Date(),\n+      onboarded: false,\n+      email: \"user1@tester.com\"\n+    }).run(client);\n+  \n+    const user = e.select(e.User, (u) => ({\n+      filter: e.op(u.email, \"=\", \"user1@tester.com\"),\n+    }));\n+  \n+    await e.set(\n+      e.insert(e.Password, {\n+        hash,\n+        user: user\n+      }),\n+      e.insert(e.UserProfile, {\n+        first_name: \"first_name\",\n+        last_name: \"last_name\",\n+        user: user\n+      })\n+    ).run(client)\n \n-\n-  user: e.insert(e.User, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"John\",\n-      last_name: \"Doe\",\n-    })\n-  })\n-\n-\n   \n \n   // ORGANISATION\n   // create an organisation with organisation profile\n"
                },
                {
                    "date": 1675782699427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,15 +40,12 @@\n \n     await e.insert(e.User, {\n       created_at: new Date(),\n       onboarded: false,\n-      email: \"user1@tester.com\"\n-    }).run(client);\n+      email: \"user1@tester.com\",\n+    })\n+\n   \n-    const user = e.select(e.User, (u) => ({\n-      filter: e.op(u.email, \"=\", \"user1@tester.com\"),\n-    }));\n-  \n     await e.set(\n       e.insert(e.Password, {\n         hash,\n         user: user\n"
                },
                {
                    "date": 1675782715862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,26 +37,28 @@\n     })\n     .run(client);\n \n \n-    await e.insert(e.User, {\n-      created_at: new Date(),\n-      onboarded: false,\n-      email: \"user1@tester.com\",\n+  // const user = e.insert(e.User, {\n+  //   created_at: new Date(),\n+  //   onboarded: false,\n+  //   email: email,\n+  // });\n+\n+\n+  user: e.insert(e.User, {\n+    created_at: new Date(),\n+    onboarded: false,\n+    email: email,\n+    password: e.insert(e.UserPassword, {\n+      hash: hash,\n+    }),\n+    profile: e.insert(e.UserProfile, {\n+      first_name: \"John\",\n+      last_name: \"Doe\",\n     })\n+  })\n \n-  \n-    await e.set(\n-      e.insert(e.Password, {\n-        hash,\n-        user: user\n-      }),\n-      e.insert(e.UserProfile, {\n-        first_name: \"first_name\",\n-        last_name: \"last_name\",\n-        user: user\n-      })\n-    ).run(client)\n \n   \n \n   // ORGANISATION\n"
                },
                {
                    "date": 1675782726842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n //@ts-ignore-all\n import bcrypt from \"bcryptjs\";\n import { client, e } from \"app/db.server\";\n \n-\n // METHODS\n // todo\n \n // START SEEDS\n@@ -32,20 +31,18 @@\n     .insert(e.AdminPassword, {\n       hash,\n       admin: e.insert(e.Admin, {\n         email: \"admin@tester.com\",\n-      })\n+      }),\n     })\n     .run(client);\n \n-\n   // const user = e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n   //   email: email,\n   // });\n \n-\n   user: e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n@@ -54,23 +51,19 @@\n     }),\n     profile: e.insert(e.UserProfile, {\n       first_name: \"John\",\n       last_name: \"Doe\",\n-    })\n-  })\n+    }),\n+  });\n \n-\n-  \n-\n   // ORGANISATION\n   // create an organisation with organisation profile\n   // await e\n   //   .insert(e.Organisation, {\n   //     name: \"checkr\"\n   //   })\n   //   .run(client);\n \n-\n   // TEMP\n   // COUNTRIES\n   const countries = [\n     { name: \"United States\" },\n@@ -100,9 +93,8 @@\n   //     })\n   //   )\n   //   .run(client);\n \n-\n   console.log(`Database has been seeded. 🌱`);\n }\n \n seed()\n"
                },
                {
                    "date": 1675782744331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   //   onboarded: false,\n   //   email: email,\n   // });\n \n-  user: e.insert(e.User, {\n+  user: await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n     password: e.insert(e.UserPassword, {\n"
                },
                {
                    "date": 1675782755187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n   //   onboarded: false,\n   //   email: email,\n   // });\n \n-  user: await e.insert(e.User, {\n+  const await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n     password: e.insert(e.UserPassword, {\n"
                },
                {
                    "date": 1675782773153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,27 +35,9 @@\n       }),\n     })\n     .run(client);\n \n-  // const user = e.insert(e.User, {\n-  //   created_at: new Date(),\n-  //   onboarded: false,\n-  //   email: email,\n-  // });\n-\n-  const await e.insert(e.User, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"John\",\n-      last_name: \"Doe\",\n-    }),\n-  });\n-\n+  /\n   // ORGANISATION\n   // create an organisation with organisation profile\n   // await e\n   //   .insert(e.Organisation, {\n"
                },
                {
                    "date": 1675782803211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,13 @@\n       }),\n     })\n     .run(client);\n \n-  /\n+  \n+    \n+\n+\n+\n   // ORGANISATION\n   // create an organisation with organisation profile\n   // await e\n   //   .insert(e.Organisation, {\n"
                },
                {
                    "date": 1675782815655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,21 @@\n       }),\n     })\n     .run(client);\n \n-  \n-    \n+  user: e.insert(e.User, {\n+    created_at: new Date(),\n+    onboarded: false,\n+    email: email,\n+    password: e.insert(e.UserPassword, {\n+      hash: hash,\n+    }),\n+    profile: e.insert(e.UserProfile, {\n+      first_name: \"John\",\n+      last_name: \"Doe\",\n+    }),\n+  });\n \n-\n-\n   // ORGANISATION\n   // create an organisation with organisation profile\n   // await e\n   //   .insert(e.Organisation, {\n"
                },
                {
                    "date": 1675783078364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       }),\n     })\n     .run(client);\n \n-  user: e.insert(e.User, {\n+  const user = e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n     password: e.insert(e.UserPassword, {\n"
                },
                {
                    "date": 1675783115799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n       }),\n     })\n     .run(client);\n \n-  const user = e.insert(e.User, {\n+  e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n     password: e.insert(e.UserPassword, {\n"
                },
                {
                    "date": 1675783148145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,20 +35,20 @@\n       }),\n     })\n     .run(client);\n \n-  e.insert(e.User, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"John\",\n-      last_name: \"Doe\",\n-    }),\n-  });\n+  // e.insert(e.User, {\n+  //   created_at: new Date(),\n+  //   onboarded: false,\n+  //   email: email,\n+  //   password: e.insert(e.UserPassword, {\n+  //     hash: hash,\n+  //   }),\n+  //   profile: e.insert(e.UserProfile, {\n+  //     first_name: \"John\",\n+  //     last_name: \"Doe\",\n+  //   }),\n+  // });\n \n   // ORGANISATION\n   // create an organisation with organisation profile\n   // await e\n"
                },
                {
                    "date": 1675783473221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,22 @@\n       }),\n     })\n     .run(client);\n \n+\n+    e.insert(e.User, {\n+      created_at: new Date(),\n+      onboarded: false,\n+      email: args.email,\n+      password: e.insert(e.UserPassword, {\n+        hash: args.hash,\n+      }),\n+      profile: e.insert(e.UserProfile, {\n+        first_name: args.first_name,\n+        last_name: args.last_name,\n+      })\n+    })    \n+\n   // e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n   //   email: email,\n"
                },
                {
                    "date": 1675783482893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,20 +36,8 @@\n     })\n     .run(client);\n \n \n-    e.insert(e.User, {\n-      created_at: new Date(),\n-      onboarded: false,\n-      email: args.email,\n-      password: e.insert(e.UserPassword, {\n-        hash: args.hash,\n-      }),\n-      profile: e.insert(e.UserProfile, {\n-        first_name: args.first_name,\n-        last_name: args.last_name,\n-      })\n-    })    \n \n   // e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n"
                },
                {
                    "date": 1675783589905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,20 +37,20 @@\n     .run(client);\n \n \n \n-  // e.insert(e.User, {\n-  //   created_at: new Date(),\n-  //   onboarded: false,\n-  //   email: email,\n-  //   password: e.insert(e.UserPassword, {\n-  //     hash: hash,\n-  //   }),\n-  //   profile: e.insert(e.UserProfile, {\n-  //     first_name: \"John\",\n-  //     last_name: \"Doe\",\n-  //   }),\n-  // });\n+  e.insert(e.User, {\n+    created_at: new Date(),\n+    onboarded: false,\n+    email: email,\n+    password: e.insert(e.UserPassword, {\n+      hash: hash,\n+    }),\n+    profile: e.insert(e.UserProfile, {\n+      first_name: \"John\",\n+      last_name: \"Doe\",\n+    }),\n+  });\n \n   // ORGANISATION\n   // create an organisation with organisation profile\n   // await e\n"
                },
                {
                    "date": 1675783606780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     .run(client);\n \n \n \n-  e.insert(e.User, {\n+  await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n     password: e.insert(e.UserPassword, {\n"
                },
                {
                    "date": 1675783690217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,21 @@\n       last_name: \"Doe\",\n     }),\n   });\n \n+  await e.set(\n+    e.insert(e.Password, {\n+      hash,\n+      user: user\n+    }),\n+    e.insert(e.UserProfile, {\n+      first_name: \"first_name\",\n+      last_name: \"last_name\",\n+      user: user\n+    }),\n+  ).run(client)\n+\n+\n   // ORGANISATION\n   // create an organisation with organisation profile\n   // await e\n   //   .insert(e.Organisation, {\n"
                },
                {
                    "date": 1675783744019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,29 @@\n     })\n     .run(client);\n \n \n+    await e.insert(e.User, {\n+      created_at: new Date(),\n+      onboarded: false,\n+      email: \"user1@tester.com\"\n+    }).run(client);\n+  \n+    const user = e.select(e.User, (u) => ({\n+      filter: e.op(u.email, \"=\", \"user1@tester.com\"),\n+    }));\n+  \n+    await e.set(\n+      e.insert(e.Password, {\n+        hash,\n+        user: user\n+      }),\n+      e.insert(e.UserProfile, {\n+        first_name: \"first_name\",\n+        last_name: \"last_name\",\n+        user: user\n+      })\n+    ).run(client)\n \n   await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n"
                },
                {
                    "date": 1675783779605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,29 +36,8 @@\n     })\n     .run(client);\n \n \n-    await e.insert(e.User, {\n-      created_at: new Date(),\n-      onboarded: false,\n-      email: \"user1@tester.com\"\n-    }).run(client);\n-  \n-    const user = e.select(e.User, (u) => ({\n-      filter: e.op(u.email, \"=\", \"user1@tester.com\"),\n-    }));\n-  \n-    await e.set(\n-      e.insert(e.Password, {\n-        hash,\n-        user: user\n-      }),\n-      e.insert(e.UserProfile, {\n-        first_name: \"first_name\",\n-        last_name: \"last_name\",\n-        user: user\n-      })\n-    ).run(client)\n \n   await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n"
                },
                {
                    "date": 1675783812653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,32 @@\n     })\n     .run(client);\n \n \n+        // #1\n \n+    const user = await e.insert(e.User, {\n+      created_at: new Date(),\n+      onboarded: false,\n+      email: \"user2@tester.com\"\n+    })\n+  \n+  \n+  \n+    await e.set(\n+      e.insert(e.Password, {\n+        hash,\n+        user: user\n+      }),\n+      e.insert(e.UserProfile, {\n+        first_name: \"first_name\",\n+        last_name: \"last_name\",\n+        user: user\n+      })\n+    ).run(client)\n+\n+    // #2\n+\n   await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n"
                },
                {
                    "date": 1675806962233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n //@ts-ignore-all\n import bcrypt from \"bcryptjs\";\n import { client, e } from \"app/db.server\";\n \n+\n // METHODS\n // todo\n \n // START SEEDS\n@@ -10,14 +11,14 @@\n   const email = \"user@tester.com\";\n   const pass = \"talkmate\";\n   const hash = await bcrypt.hash(pass, 10);\n \n-  // const userExisting = e.select(e.User, (u) => ({\n-  //   filter: e.op(u.email, \"=\", email),\n-  // }));\n+  const userExisting = e.select(e.User, (u) => ({\n+    filter: e.op(u.email, \"=\", email),\n+  }));\n \n   // cleanup the existing database\n-  // await e.delete(userExisting).run(client);\n+  await e.delete(userExisting).run(client);\n \n   await e.delete(e.User).run(client);\n   await e.delete(e.Country).run(client);\n   await e.delete(e.Admin).run(client);\n@@ -30,54 +31,37 @@\n   await e\n     .insert(e.AdminPassword, {\n       hash,\n       admin: e.insert(e.Admin, {\n-        email: \"admin@tester.com\",\n-      }),\n+        email: \"admin@tester.com\"\n+      })\n     })\n     .run(client);\n \n \n-        // #1\n+  // const user = e.insert(e.user, {\n+  //   created_at: new Date(),\n+  //   onboarded: false,\n+  //   email: email,\n+  //   password: e.insert(e.UserPassword, {\n+  //     hash: hash,\n+  //   }),\n+  //   profile: e.insert(e.UserProfile, {\n+  //     first_name: \"first_name\",\n+  //     last_name: \"last_name\",\n+  //   }),\n+  // }).run(client)\n \n-    const user = await e.insert(e.User, {\n-      created_at: new Date(),\n-      onboarded: false,\n-      email: \"user2@tester.com\"\n-    })\n-  \n-  \n-  \n-    await e.set(\n-      e.insert(e.Password, {\n-        hash,\n-        user: user\n-      }),\n-      e.insert(e.UserProfile, {\n-        first_name: \"first_name\",\n-        last_name: \"last_name\",\n-        user: user\n-      })\n-    ).run(client)\n \n-    // #2\n-\n-  await e.insert(e.User, {\n+  //CORRECT\n+  const user = await e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"John\",\n-      last_name: \"Doe\",\n-    }),\n-  });\n-\n+  })\n   await e.set(\n     e.insert(e.Password, {\n-      hash,\n+      hash: hash,\n       user: user\n     }),\n     e.insert(e.UserProfile, {\n       first_name: \"first_name\",\n@@ -86,27 +70,31 @@\n     }),\n   ).run(client)\n \n \n+\n+\n+\n   // ORGANISATION\n   // create an organisation with organisation profile\n-  // await e\n-  //   .insert(e.Organisation, {\n-  //     name: \"checkr\"\n-  //   })\n-  //   .run(client);\n+  await e\n+    .insert(e.Organisation, {\n+      name: \"checkr\"\n+    })\n+    .run(client);\n \n+\n   // TEMP\n   // COUNTRIES\n   const countries = [\n     { name: \"United States\" },\n     { name: \"Canada\" },\n-    { name: \"Mexico\" },\n+    { name: \"Mexico\" }\n   ];\n   for (const country of countries) {\n     await e\n       .insert(e.Country, {\n-        name: country.name,\n+        name: country.name\n       })\n       .run(client);\n   }\n \n@@ -125,8 +113,9 @@\n   //     })\n   //   )\n   //   .run(client);\n \n+\n   console.log(`Database has been seeded. 🌱`);\n }\n \n seed()\n"
                },
                {
                    "date": 1675806975187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,44 +37,44 @@\n     })\n     .run(client);\n \n \n-  // const user = e.insert(e.user, {\n+  const user = e.insert(e.user, {\n+    created_at: new Date(),\n+    onboarded: false,\n+    email: email,\n+    password: e.insert(e.UserPassword, {\n+      hash: hash,\n+    }),\n+    profile: e.insert(e.UserProfile, {\n+      first_name: \"first_name\",\n+      last_name: \"last_name\",\n+    }),\n+  }).run(client)\n+\n+\n+  //CORRECT\n+  // const user = await e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n   //   email: email,\n-  //   password: e.insert(e.UserPassword, {\n+  // }),\n+  // await e.set(\n+  //   e.insert(e.Password, {\n   //     hash: hash,\n+  //     user: user\n   //   }),\n-  //   profile: e.insert(e.UserProfile, {\n+  //   e.insert(e.UserProfile, {\n   //     first_name: \"first_name\",\n   //     last_name: \"last_name\",\n+  //     user: user\n   //   }),\n-  // }).run(client)\n+  // ).run(client)\n \n \n-  //CORRECT\n-  const user = await e.insert(e.User, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-  })\n-  await e.set(\n-    e.insert(e.Password, {\n-      hash: hash,\n-      user: user\n-    }),\n-    e.insert(e.UserProfile, {\n-      first_name: \"first_name\",\n-      last_name: \"last_name\",\n-      user: user\n-    }),\n-  ).run(client)\n \n \n \n-\n-\n   // ORGANISATION\n   // create an organisation with organisation profile\n   await e\n     .insert(e.Organisation, {\n"
                },
                {
                    "date": 1675807001395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,17 @@\n     })\n     .run(client);\n \n \n+  const user = e.insert(e.User, {\n+\n+    email,\n+    password: hash,\n+    admin: e.insert(e.Admin, {\n+      email: \"admin@tester.com\"\n+    })\n+  })\n+\n   const user = e.insert(e.user, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n"
                },
                {
                    "date": 1675807006453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,10 +38,9 @@\n     .run(client);\n \n \n   const user = e.insert(e.User, {\n-\n-    email,\n+    email: email,\n     password: hash,\n     admin: e.insert(e.Admin, {\n       email: \"admin@tester.com\"\n     })\n"
                },
                {
                    "date": 1675807032142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,11 +39,10 @@\n \n \n   const user = e.insert(e.User, {\n     email: email,\n-    password: hash,\n-    admin: e.insert(e.Admin, {\n-      email: \"admin@tester.com\"\n+    password: e.insert(e.UserPassword, {\n+      hash: hash\n     })\n   })\n \n   const user = e.insert(e.user, {\n"
                },
                {
                    "date": 1675807049945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n //@ts-ignore-all\n import bcrypt from \"bcryptjs\";\n import { client, e } from \"app/db.server\";\n+import { UserProfile } from './edgeql-js/types';\n \n \n // METHODS\n // todo\n@@ -41,8 +42,11 @@\n   const user = e.insert(e.User, {\n     email: email,\n     password: e.insert(e.UserPassword, {\n       hash: hash\n+    }),\n+    profile: e.insert(e.UserProfile, {\n+      \n     })\n   })\n \n   const user = e.insert(e.user, {\n"
                },
                {
                    "date": 1675807063101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,11 @@\n     password: e.insert(e.UserPassword, {\n       hash: hash\n     }),\n     profile: e.insert(e.UserProfile, {\n-      \n+      first_name: \"John\",\n+      last_name: \"Doe\",\n+\n     })\n   })\n \n   const user = e.insert(e.user, {\n"
                },
                {
                    "date": 1675807072705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,12 +46,11 @@\n     }),\n     profile: e.insert(e.UserProfile, {\n       first_name: \"John\",\n       last_name: \"Doe\",\n+    }),\n+  }).run(client);\n \n-    })\n-  })\n-\n   const user = e.insert(e.user, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n"
                },
                {
                    "date": 1675807301540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,19 @@\n     })\n     .run(client);\n \n \n+  // write an insert query for user, with UserPassword and UserProfile \n+  await e.insert(e.User, {\n+    email,\n+    password: hash,\n+    profile: e.insert(e.UserProfile, {\n+      firstName: \"John\",\n+      lastName: \"Doe\",\n+      country: e.insert(e.Country, {\n+        name: \"United States\",\n+      }),\n+  })  \n   const user = e.insert(e.User, {\n     email: email,\n     password: e.insert(e.UserPassword, {\n       hash: hash\n@@ -49,20 +60,8 @@\n       last_name: \"Doe\",\n     }),\n   }).run(client);\n \n-  const user = e.insert(e.user, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"first_name\",\n-      last_name: \"last_name\",\n-    }),\n-  }).run(client)\n \n \n   //CORRECT\n   // const user = await e.insert(e.User, {\n"
                },
                {
                    "date": 1675807324652,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,29 +41,21 @@\n \n   // write an insert query for user, with UserPassword and UserProfile \n   await e.insert(e.User, {\n     email,\n-    password: hash,\n+    password: e.insert(e.UserPassword, {\n+      hash,\n+    })\n     profile: e.insert(e.UserProfile, {\n       firstName: \"John\",\n       lastName: \"Doe\",\n       country: e.insert(e.Country, {\n         name: \"United States\",\n       }),\n   })  \n-  const user = e.insert(e.User, {\n-    email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"John\",\n-      last_name: \"Doe\",\n-    }),\n-  }).run(client);\n+  \n \n \n-\n   //CORRECT\n   // const user = await e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n"
                },
                {
                    "date": 1675807353584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n   await e.insert(e.User, {\n     email,\n     password: e.insert(e.UserPassword, {\n       hash,\n-    })\n+    }),\n     profile: e.insert(e.UserProfile, {\n       firstName: \"John\",\n       lastName: \"Doe\",\n       country: e.insert(e.Country, {\n@@ -78,13 +78,8 @@\n \n \n   // ORGANISATION\n   // create an organisation with organisation profile\n-  await e\n-    .insert(e.Organisation, {\n-      name: \"checkr\"\n-    })\n-    .run(client);\n \n \n   // TEMP\n   // COUNTRIES\n"
                },
                {
                    "date": 1675807384303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,10 @@\n       lastName: \"Doe\",\n       country: e.insert(e.Country, {\n         name: \"United States\",\n       }),\n-  })  \n+  })\n+  .run(client) \n   \n \n \n   //CORRECT\n"
                },
                {
                    "date": 1675807390255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n       country: e.insert(e.Country, {\n         name: \"United States\",\n       }),\n   })\n-  .run(client) \n+  .run(client)\n   \n \n \n   //CORRECT\n"
                },
                {
                    "date": 1675807403946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n       firstName: \"John\",\n       lastName: \"Doe\",\n       country: e.insert(e.Country, {\n         name: \"United States\",\n-      }),\n+      })\n   })\n   .run(client)\n   \n \n"
                },
                {
                    "date": 1675807417042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,11 @@\n     .run(client);\n \n \n   // write an insert query for user, with UserPassword and UserProfile \n-  await e.insert(e.User, {\n+  await e.\n+  \n+  insert(e.User, {\n     email,\n     password: e.insert(e.UserPassword, {\n       hash,\n     }),\n"
                },
                {
                    "date": 1675807429840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,18 +41,18 @@\n \n   // write an insert query for user, with UserPassword and UserProfile \n   await e.\n   \n-  insert(e.User, {\n-    email,\n-    password: e.insert(e.UserPassword, {\n-      hash,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      firstName: \"John\",\n-      lastName: \"Doe\",\n-      country: e.insert(e.Country, {\n-        name: \"United States\",\n+    insert(e.User, {\n+      email,\n+      password: e.insert(e.UserPassword, {\n+        hash,\n+      }),\n+      profile: e.insert(e.UserProfile, {\n+        firstName: \"John\",\n+        lastName: \"Doe\",\n+        country: e.insert(e.Country, {\n+          name: \"United States\",\n       })\n   })\n   .run(client)\n   \n"
                },
                {
                    "date": 1675807441695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,8 @@\n \n \n   // write an insert query for user, with UserPassword and UserProfile \n   await e.\n-  \n     insert(e.User, {\n       email,\n       password: e.insert(e.UserPassword, {\n         hash,\n"
                },
                {
                    "date": 1675807463085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,20 +84,20 @@\n \n \n   // TEMP\n   // COUNTRIES\n-  const countries = [\n-    { name: \"United States\" },\n-    { name: \"Canada\" },\n-    { name: \"Mexico\" }\n-  ];\n-  for (const country of countries) {\n-    await e\n-      .insert(e.Country, {\n-        name: country.name\n-      })\n-      .run(client);\n-  }\n+  // const countries = [\n+  //   { name: \"United States\" },\n+  //   { name: \"Canada\" },\n+  //   { name: \"Mexico\" }\n+  // ];\n+  // for (const country of countries) {\n+  //   await e\n+  //     .insert(e.Country, {\n+  //       name: country.name\n+  //     })\n+  //     .run(client);\n+  // }\n \n   //NOTES\n   // await e\n   //   .set(\n"
                },
                {
                    "date": 1675807474484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n         lastName: \"Doe\",\n         country: e.insert(e.Country, {\n           name: \"United States\",\n       })\n-  })\n+  }))\n   .run(client)\n   \n \n \n"
                },
                {
                    "date": 1675807645875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,22 +38,28 @@\n     })\n     .run(client);\n \n \n+    e.insert(e.Movie, {\n+      title: 'Doctor Strange 2',\n+      release_year: 2022\n+    });\n+\n+\n   // write an insert query for user, with UserPassword and UserProfile \n   await e.\n     insert(e.User, {\n       email,\n       password: e.insert(e.UserPassword, {\n-        hash,\n+        hash\n       }),\n       profile: e.insert(e.UserProfile, {\n         firstName: \"John\",\n         lastName: \"Doe\",\n         country: e.insert(e.Country, {\n           name: \"United States\",\n       })\n-  }))\n+  })\n   .run(client)\n   \n \n \n"
                },
                {
                    "date": 1675807652640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,15 +50,15 @@\n     insert(e.User, {\n       email,\n       password: e.insert(e.UserPassword, {\n         hash\n-      }),\n       profile: e.insert(e.UserProfile, {\n         firstName: \"John\",\n         lastName: \"Doe\",\n         country: e.insert(e.Country, {\n           name: \"United States\",\n       })\n+    }),\n   })\n   .run(client)\n   \n \n"
                },
                {
                    "date": 1675807657697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,9 @@\n     insert(e.User, {\n       email,\n       password: e.insert(e.UserPassword, {\n         hash\n+      }),\n       profile: e.insert(e.UserProfile, {\n         firstName: \"John\",\n         lastName: \"Doe\",\n         country: e.insert(e.Country, {\n"
                },
                {
                    "date": 1675807667899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,27 +44,11 @@\n       release_year: 2022\n     });\n \n \n-  // write an insert query for user, with UserPassword and UserProfile \n-  await e.\n-    insert(e.User, {\n-      email,\n-      password: e.insert(e.UserPassword, {\n-        hash\n-      }),\n-      profile: e.insert(e.UserProfile, {\n-        firstName: \"John\",\n-        lastName: \"Doe\",\n-        country: e.insert(e.Country, {\n-          name: \"United States\",\n-      })\n-    }),\n-  })\n-  .run(client)\n-  \n \n \n+\n   //CORRECT\n   // const user = await e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n"
                },
                {
                    "date": 1675807707413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,17 +38,11 @@\n     })\n     .run(client);\n \n \n-    e.insert(e.Movie, {\n-      title: 'Doctor Strange 2',\n-      release_year: 2022\n-    });\n \n \n \n-\n-\n   //CORRECT\n   // const user = await e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n"
                },
                {
                    "date": 1675807719727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,22 +27,26 @@\n   await e.delete(e.Organisation).run(client);\n   await e.delete(e.OrganisationProfile).run(client);\n   await e.delete(e.OrganisationTeam).run(client);\n \n-  // ADMIN\n-  await e\n-    .insert(e.AdminPassword, {\n-      hash,\n-      admin: e.insert(e.Admin, {\n-        email: \"admin@tester.com\"\n-      })\n-    })\n-    .run(client);\n \n \n+  const user = e.insert(e.User, {\n+    created_at: new Date(),\n+    onboarded: false,\n+    email: email,\n+    password: e.insert(e.UserPassword, {\n+      hash: hash,\n+    }),\n+    profile: e.insert(e.UserProfile, {\n+      first_name: \"first_name\",\n+      last_name: \"last_name\",\n+    }),\n+  }).run(client)\n \n \n \n+\n   //CORRECT\n   // const user = await e.insert(e.User, {\n   //   created_at: new Date(),\n   //   onboarded: false,\n"
                },
                {
                    "date": 1675807753185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n //@ts-ignore-all\n+\n import bcrypt from \"bcryptjs\";\n import { client, e } from \"app/db.server\";\n import { UserProfile } from './edgeql-js/types';\n \n"
                },
                {
                    "date": 1675807800759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n //@ts-ignore-all\n \n import bcrypt from \"bcryptjs\";\n import { client, e } from \"app/db.server\";\n-import { UserProfile } from './edgeql-js/types';\n \n \n // METHODS\n // todo\n"
                },
                {
                    "date": 1675876608134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,109 +2,116 @@\n \n import bcrypt from \"bcryptjs\";\n import { client, e } from \"app/db.server\";\n \n-\n // METHODS\n // todo\n \n // START SEEDS\n async function seed() {\n-  const email = \"user@tester.com\";\n+  const email = \"user1@checkr.nl\";\n   const pass = \"talkmate\";\n   const hash = await bcrypt.hash(pass, 10);\n \n   const userExisting = e.select(e.User, (u) => ({\n     filter: e.op(u.email, \"=\", email),\n   }));\n \n+  // const organisationExisting = e.select(e.Organisation, (u) => ({\n+  //   filter: e.op(u, \"=\", email)\n+  // }));\n+\n   // cleanup the existing database\n   await e.delete(userExisting).run(client);\n-\n+  // await e.delete(organisationExisting).run(client);\n+  await e.delete(e.Admin).run(client);\n+  await e.delete(e.AdminPassword).run(client);\n+  await e.delete(e.AdminProfile).run(client);\n   await e.delete(e.User).run(client);\n+  await e.delete(e.UserPassword).run(client);\n+  await e.delete(e.UserProfile).run(client);\n   await e.delete(e.Country).run(client);\n-  await e.delete(e.Admin).run(client);\n-  await e.delete(e.AdminProfile).run(client);\n   await e.delete(e.Organisation).run(client);\n   await e.delete(e.OrganisationProfile).run(client);\n-  await e.delete(e.OrganisationTeam).run(client);\n \n+  const admin = e\n+    .insert(e.Admin, {\n+      email: \"admin@checkr.nl\",\n+      password: e.insert(e.AdminPassword, {\n+        hash: hash,\n+      }),\n+      profile: e.insert(e.AdminProfile, {\n+        first_name: \"admin\",\n+        last_name: \"admin\",\n+      }),\n+    })\n+    .run(client);\n \n+  const user = e\n+    .insert(e.User, {\n+      created_at: new Date(),\n+      onboarded: false,\n+      email: email,\n+      password: e.insert(e.UserPassword, {\n+        hash: hash,\n+      }),\n+      profile: e.insert(e.UserProfile, {\n+        first_name: \"first_name\",\n+        last_name: \"last_name\",\n+      }),\n+    })\n+    .run(client);\n \n-  const user = e.insert(e.User, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash,\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"first_name\",\n-      last_name: \"last_name\",\n-    }),\n-  }).run(client)\n+  const organisation = await e\n+    .insert(e.Organisation, {\n+      profile: await e.insert(e.OrganisationProfile, {\n+        name: \"Checkr\",\n+        address: \"Address\",\n+        addressNr: \"10\",\n+        city: \"City\",\n+        postal: \"1234ab\",\n+      }),\n+    })\n+    .run(client);\n \n+  // const organisationMember = await e.insert(e.OrganisationMember, {\n+  //   role: \"admin\",\n+  //   invite_code: \"123\",\n+  //   invite_status: true,\n+  //   user: userExisting,\n+  //   organisation: organisationExisting\n+  // }).run(client);\n \n-\n-\n-  //CORRECT\n-  // const user = await e.insert(e.User, {\n-  //   created_at: new Date(),\n-  //   onboarded: false,\n-  //   email: email,\n-  // }),\n-  // await e.set(\n-  //   e.insert(e.Password, {\n-  //     hash: hash,\n-  //     user: user\n-  //   }),\n-  //   e.insert(e.UserProfile, {\n-  //     first_name: \"first_name\",\n-  //     last_name: \"last_name\",\n-  //     user: user\n-  //   }),\n-  // ).run(client)\n-\n-\n-\n-\n-\n-  // ORGANISATION\n-  // create an organisation with organisation profile\n-\n-\n-  // TEMP\n   // COUNTRIES\n-  // const countries = [\n-  //   { name: \"United States\" },\n-  //   { name: \"Canada\" },\n-  //   { name: \"Mexico\" }\n-  // ];\n-  // for (const country of countries) {\n-  //   await e\n-  //     .insert(e.Country, {\n-  //       name: country.name\n-  //     })\n-  //     .run(client);\n-  // }\n+  const countries = [\n+    { name: \"United States\" },\n+    { name: \"Canada\" },\n+    { name: \"Mexico\" },\n+  ];\n+  for (const country of countries) {\n+    await e\n+      .insert(e.Country, {\n+        name: country.name,\n+      })\n+      .run(client);\n+  }\n \n   //NOTES\n-  // await e\n-  //   .set(\n-  //     e.insert(e.Note, {\n-  //       title: \"My first note MODIFIED\",\n-  //       body: \"Hello, world!\",\n-  //       user\n-  //     }),\n-  //     e.insert(e.Note, {\n-  //       title: \"My second note\",\n-  //       body: \"Hello, world!\",\n-  //       user\n-  //     })\n-  //   )\n-  //   .run(client);\n+  await e\n+    .set(\n+      e.insert(e.Note, {\n+        title: \"My first note MODIFIED\",\n+        body: \"Hello, world!\",\n+        user: userExisting,\n+      }),\n+      e.insert(e.Note, {\n+        title: \"My second note\",\n+        body: \"Hello, world!\",\n+        user: userExisting,\n+      })\n+    )\n+    .run(client);\n \n-\n   console.log(`Database has been seeded. 🌱`);\n }\n \n seed()\n"
                },
                {
                    "date": 1675876637383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,43 +45,84 @@\n       }),\n     })\n     .run(client);\n \n-  const user = e\n-    .insert(e.User, {\n-      created_at: new Date(),\n-      onboarded: false,\n-      email: email,\n-      password: e.insert(e.UserPassword, {\n-        hash: hash,\n-      }),\n-      profile: e.insert(e.UserProfile, {\n-        first_name: \"first_name\",\n-        last_name: \"last_name\",\n-      }),\n-    })\n-    .run(client);\n+  // const user = e\n+  //   .insert(e.User, {\n+  //     created_at: new Date(),\n+  //     onboarded: false,\n+  //     email: email,\n+  //     password: e.insert(e.UserPassword, {\n+  //       hash: hash,\n+  //     }),\n+  //     profile: e.insert(e.UserProfile, {\n+  //       first_name: \"first_name\",\n+  //       last_name: \"last_name\",\n+  //     }),\n+  //   })\n+  //   .run(client);\n \n-  const organisation = await e\n-    .insert(e.Organisation, {\n-      profile: await e.insert(e.OrganisationProfile, {\n-        name: \"Checkr\",\n-        address: \"Address\",\n-        addressNr: \"10\",\n-        city: \"City\",\n-        postal: \"1234ab\",\n+\n+\n+  // const organisation = await e\n+  //   .insert(e.Organisation, {\n+  //     profile: await e.insert(e.OrganisationProfile, {\n+  //       name: \"Checkr\",\n+  //       address: \"Address\",\n+  //       addressNr: \"10\",\n+  //       city: \"City\",\n+  //       postal: \"1234ab\",\n+  //     }),\n+  //   })\n+  //   .run(client);\n+\n+  \n+\n+\n+\n+  const user = e.insert(e.User, {\n+    created_at: new Date(),\n+    onboarded: false,\n+    email: email,\n+    password: e.insert(e.UserPassword, {\n+      hash: hash\n+    }),\n+    profile: e.insert(e.UserProfile, {\n+      first_name: \"first_name\",\n+      last_name: \"last_name\"\n+    }),\n+    organisations: [\n+      e.insert(e.OrganisationMember, {\n+        role: \"member\",\n+        invite_code: \"abc123\",\n+        invite_status: true,\n+        organisation: e.insert(e.Organisation, {\n+          profile: e.insert(e.OrganisationProfile, {\n+            name: \"Organization 1\",\n+            address: \"Address 1\",\n+            addressNr: \"1\",\n+            city: \"City 1\",\n+            postal: \"1234ab\"\n+          })\n+        })\n       }),\n-    })\n-    .run(client);\n+      e.insert(e.OrganisationMember, {\n+        role: \"member\",\n+        invite_code: \"def456\",\n+        invite_status: true,\n+        organisation: e.insert(e.Organisation, {\n+          profile: e.insert(e.OrganisationProfile, {\n+            name: \"Organization 2\",\n+            address: \"Address 2\",\n+            addressNr: \"2\",\n+            city: \"City 2\",\n+            postal: \"5678cd\"\n+          })\n+        })\n+      })\n+    ]\n+  }).run(client);\n \n-  // const organisationMember = await e.insert(e.OrganisationMember, {\n-  //   role: \"admin\",\n-  //   invite_code: \"123\",\n-  //   invite_status: true,\n-  //   user: userExisting,\n-  //   organisation: organisationExisting\n-  // }).run(client);\n-\n   // COUNTRIES\n   const countries = [\n     { name: \"United States\" },\n     { name: \"Canada\" },\n"
                },
                {
                    "date": 1675876780823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,10 +76,8 @@\n   //   .run(client);\n \n   \n \n-\n-\n   const user = e.insert(e.User, {\n     created_at: new Date(),\n     onboarded: false,\n     email: email,\n@@ -89,36 +87,45 @@\n     profile: e.insert(e.UserProfile, {\n       first_name: \"first_name\",\n       last_name: \"last_name\"\n     }),\n+  }).run(client);\n+\n+const organisation1 = e.insert(e.Organisation, {\n+    profile: e.insert(e.OrganisationProfile, {\n+      name: \"Organization 1\",\n+      address: \"Address 1\",\n+      addressNr: \"1\",\n+      city: \"City 1\",\n+      postal: \"1234ab\"\n+    })\n+  }).run(client);\n+\n+const organisation2 = e.insert(e.Organisation, {\n+    profile: e.insert(e.OrganisationProfile, {\n+      name: \"Organization 2\",\n+      address: \"Address 2\",\n+      addressNr: \"2\",\n+      city: \"City 2\",\n+      postal: \"5678cd\"\n+    })\n+  }).run(client);\n+\n+e.update(user).set({\n     organisations: [\n       e.insert(e.OrganisationMember, {\n         role: \"member\",\n         invite_code: \"abc123\",\n         invite_status: true,\n-        organisation: e.insert(e.Organisation, {\n-          profile: e.insert(e.OrganisationProfile, {\n-            name: \"Organization 1\",\n-            address: \"Address 1\",\n-            addressNr: \"1\",\n-            city: \"City 1\",\n-            postal: \"1234ab\"\n-          })\n-        })\n+        user: user,\n+        organisation: organisation1\n       }),\n       e.insert(e.OrganisationMember, {\n         role: \"member\",\n         invite_code: \"def456\",\n         invite_status: true,\n-        organisation: e.insert(e.Organisation, {\n-          profile: e.insert(e.OrganisationProfile, {\n-            name: \"Organization 2\",\n-            address: \"Address 2\",\n-            addressNr: \"2\",\n-            city: \"City 2\",\n-            postal: \"5678cd\"\n-          })\n-        })\n+        user: user,\n+        organisation: organisation2\n       })\n     ]\n   }).run(client);\n \n"
                },
                {
                    "date": 1675876872224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,42 +74,11 @@\n   //     }),\n   //   })\n   //   .run(client);\n \n-  \n \n-  const user = e.insert(e.User, {\n-    created_at: new Date(),\n-    onboarded: false,\n-    email: email,\n-    password: e.insert(e.UserPassword, {\n-      hash: hash\n-    }),\n-    profile: e.insert(e.UserProfile, {\n-      first_name: \"first_name\",\n-      last_name: \"last_name\"\n-    }),\n-  }).run(client);\n \n-const organisation1 = e.insert(e.Organisation, {\n-    profile: e.insert(e.OrganisationProfile, {\n-      name: \"Organization 1\",\n-      address: \"Address 1\",\n-      addressNr: \"1\",\n-      city: \"City 1\",\n-      postal: \"1234ab\"\n-    })\n-  }).run(client);\n \n-const organisation2 = e.insert(e.Organisation, {\n-    profile: e.insert(e.OrganisationProfile, {\n-      name: \"Organization 2\",\n-      address: \"Address 2\",\n-      addressNr: \"2\",\n-      city: \"City 2\",\n-      postal: \"5678cd\"\n-    })\n-  }).run(client);\n \n e.update(user).set({\n     organisations: [\n       e.insert(e.OrganisationMember, {\n"
                },
                {
                    "date": 1675876878376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,25 +45,45 @@\n       }),\n     })\n     .run(client);\n \n-  // const user = e\n-  //   .insert(e.User, {\n-  //     created_at: new Date(),\n-  //     onboarded: false,\n-  //     email: email,\n-  //     password: e.insert(e.UserPassword, {\n-  //       hash: hash,\n-  //     }),\n-  //     profile: e.insert(e.UserProfile, {\n-  //       first_name: \"first_name\",\n-  //       last_name: \"last_name\",\n-  //     }),\n-  //   })\n-  //   .run(client);\n+  const user = e\n+    .insert(e.User, {\n+      created_at: new Date(),\n+      onboarded: false,\n+      email: email,\n+      password: e.insert(e.UserPassword, {\n+        hash: hash,\n+      }),\n+      profile: e.insert(e.UserProfile, {\n+        first_name: \"first_name\",\n+        last_name: \"last_name\",\n+      }),\n+    })\n+    .run(client);\n \n+    const organisation1 = e.insert(e.Organisation, {\n+      profile: e.insert(e.OrganisationProfile, {\n+        name: \"Organization 1\",\n+        address: \"Address 1\",\n+        addressNr: \"1\",\n+        city: \"City 1\",\n+        postal: \"1234ab\"\n+      })\n+    }).run(client);\n+  \n+  const organisation2 = e.insert(e.Organisation, {\n+      profile: e.insert(e.OrganisationProfile, {\n+        name: \"Organization 2\",\n+        address: \"Address 2\",\n+        addressNr: \"2\",\n+        city: \"City 2\",\n+        postal: \"5678cd\"\n+      })\n+    }).run(client);\n \n \n+\n   // const organisation = await e\n   //   .insert(e.Organisation, {\n   //     profile: await e.insert(e.OrganisationProfile, {\n   //       name: \"Checkr\",\n"
                },
                {
                    "date": 1675876932333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+/* eslint-disable prettier/prettier */\n //@ts-ignore-all\n \n import bcrypt from \"bcryptjs\";\n import { client, e } from \"app/db.server\";\n@@ -98,26 +99,26 @@\n \n \n \n \n-e.update(user).set({\n-    organisations: [\n-      e.insert(e.OrganisationMember, {\n-        role: \"member\",\n-        invite_code: \"abc123\",\n-        invite_status: true,\n-        user: user,\n-        organisation: organisation1\n-      }),\n-      e.insert(e.OrganisationMember, {\n-        role: \"member\",\n-        invite_code: \"def456\",\n-        invite_status: true,\n-        user: user,\n-        organisation: organisation2\n-      })\n-    ]\n-  }).run(client);\n+// e.update(user).set({\n+//     organisations: [\n+//       e.insert(e.OrganisationMember, {\n+//         role: \"member\",\n+//         invite_code: \"abc123\",\n+//         invite_status: true,\n+//         user: user,\n+//         organisation: organisation1\n+//       }),\n+//       e.insert(e.OrganisationMember, {\n+//         role: \"member\",\n+//         invite_code: \"def456\",\n+//         invite_status: true,\n+//         user: user,\n+//         organisation: organisation2\n+//       })\n+//     ]\n+//   }).run(client);\n \n   // COUNTRIES\n   const countries = [\n     { name: \"United States\" },\n"
                },
                {
                    "date": 1675876949493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,25 +82,8 @@\n       })\n     }).run(client);\n \n \n-\n-  // const organisation = await e\n-  //   .insert(e.Organisation, {\n-  //     profile: await e.insert(e.OrganisationProfile, {\n-  //       name: \"Checkr\",\n-  //       address: \"Address\",\n-  //       addressNr: \"10\",\n-  //       city: \"City\",\n-  //       postal: \"1234ab\",\n-  //     }),\n-  //   })\n-  //   .run(client);\n-\n-\n-\n-\n-\n // e.update(user).set({\n //     organisations: [\n //       e.insert(e.OrganisationMember, {\n //         role: \"member\",\n"
                },
                {
                    "date": 1675876973718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,27 +82,31 @@\n       })\n     }).run(client);\n \n \n-// e.update(user).set({\n-//     organisations: [\n-//       e.insert(e.OrganisationMember, {\n-//         role: \"member\",\n-//         invite_code: \"abc123\",\n-//         invite_status: true,\n-//         user: user,\n-//         organisation: organisation1\n-//       }),\n-//       e.insert(e.OrganisationMember, {\n-//         role: \"member\",\n-//         invite_code: \"def456\",\n-//         invite_status: true,\n-//         user: user,\n-//         organisation: organisation2\n-//       })\n-//     ]\n-//   }).run(client);\n+    await e.update(user).set({\n+      organisations: [\n+        e.insert(e.OrganisationMember, {\n+          role: \"member\",\n+          invite_code: \"abc123\",\n+          invite_status: true,\n+          user: user,\n+          organisation: organisation1\n+        }),\n+        e.insert(e.OrganisationMember, {\n+          role: \"member\",\n+          invite_code: \"def456\",\n+          invite_status: true,\n+          user: user,\n+          organisation: organisation2\n+        })\n+      ]\n+    }).run(client);\n \n+\n+\n+\n+\n   // COUNTRIES\n   const countries = [\n     { name: \"United States\" },\n     { name: \"Canada\" },\n"
                },
                {
                    "date": 1675877007462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n       }),\n     })\n-    .run(client);\n+    \n \n     const organisation1 = e.insert(e.Organisation, {\n       profile: e.insert(e.OrganisationProfile, {\n         name: \"Organization 1\",\n"
                },
                {
                    "date": 1675877024664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n       }),\n     })\n-    \n+    .run(client);\n \n     const organisation1 = e.insert(e.Organisation, {\n       profile: e.insert(e.OrganisationProfile, {\n         name: \"Organization 1\",\n"
                },
                {
                    "date": 1675877038147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       })\n     }).run(client);\n \n \n-    await e.update(user).set({\n+    await e.update(userExisting).set({\n       organisations: [\n         e.insert(e.OrganisationMember, {\n           role: \"member\",\n           invite_code: \"abc123\",\n"
                },
                {
                    "date": 1675877058319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       })\n     }).run(client);\n \n \n-    await e.update(userExisting).set({\n+    await e.update(user).set({\n       organisations: [\n         e.insert(e.OrganisationMember, {\n           role: \"member\",\n           invite_code: \"abc123\",\n"
                },
                {
                    "date": 1675877094487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,14 @@\n         postal: \"5678cd\"\n       })\n     }).run(client);\n \n+    e.update(e.User, user => ({\n+      filter: e.op(movie.title[0], '=', ' '),\n+      set: {\n+        title: e.str_trim(movie.title)\n+      }\n+    }))\n \n     await e.update(user).set({\n       organisations: [\n         e.insert(e.OrganisationMember, {\n"
                },
                {
                    "date": 1675877099540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       })\n     }).run(client);\n \n     e.update(e.User, user => ({\n-      filter: e.op(movie.title[0], '=', ' '),\n+      filter: e.op(user.title[0], '=', ' '),\n       set: {\n         title: e.str_trim(movie.title)\n       }\n     }))\n"
                },
                {
                    "date": 1675877109540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       })\n     }).run(client);\n \n     e.update(e.User, user => ({\n-      filter: e.op(user.title[0], '=', ' '),\n+      filter: e.op(user.email '=', email'),\n       set: {\n         title: e.str_trim(movie.title)\n       }\n     }))\n"
                },
                {
                    "date": 1675877126029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       })\n     }).run(client);\n \n     e.update(e.User, user => ({\n-      filter: e.op(user.email '=', email'),\n+      filter: e.op(user.email, '=', ' '),\n       set: {\n         title: e.str_trim(movie.title)\n       }\n     }))\n"
                },
                {
                    "date": 1675877140534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n       })\n     }).run(client);\n \n     e.update(e.User, user => ({\n-      filter: e.op(user.email, '=', ' '),\n+      filter: e.op(user.email, '=', email),\n       set: {\n         title: e.str_trim(movie.title)\n       }\n     }))\n"
                },
                {
                    "date": 1675877165386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,16 @@\n \n     e.update(e.User, user => ({\n       filter: e.op(user.email, '=', email),\n       set: {\n-        title: e.str_trim(movie.title)\n+        organisations: [\n+          e.insert(e.OrganisationMember, {\n+            role: \"member\",\n+            invite_code: \"abc123\",\n+            invite_status: true,\n+            user: user,\n+            organisation: organisation1\n+          }),\n       }\n     }))\n \n     await e.update(user).set({\n"
                },
                {
                    "date": 1675877180465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,35 +91,18 @@\n             invite_code: \"abc123\",\n             invite_status: true,\n             user: user,\n             organisation: organisation1\n-          }),\n+          })\n+        ]\n       }\n-    }))\n+    })).run(client);\n \n-    await e.update(user).set({\n-      organisations: [\n-        e.insert(e.OrganisationMember, {\n-          role: \"member\",\n-          invite_code: \"abc123\",\n-          invite_status: true,\n-          user: user,\n-          organisation: organisation1\n-        }),\n-        e.insert(e.OrganisationMember, {\n-          role: \"member\",\n-          invite_code: \"def456\",\n-          invite_status: true,\n-          user: user,\n-          organisation: organisation2\n-        })\n-      ]\n-    }).run(client);\n+  \n \n \n \n \n-\n   // COUNTRIES\n   const countries = [\n     { name: \"United States\" },\n     { name: \"Canada\" },\n"
                },
                {
                    "date": 1675877284854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,14 +90,13 @@\n             role: \"member\",\n             invite_code: \"abc123\",\n             invite_status: true,\n             user: user,\n-            organisation: organisation1\n+            organisation: e.get(e.Organisation).filter({ name: organisation1Name })\n           })\n         ]\n       }\n     })).run(client);\n-\n   \n \n \n \n"
                },
                {
                    "date": 1675877312915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n             role: \"member\",\n             invite_code: \"abc123\",\n             invite_status: true,\n             user: user,\n-            organisation: e.get(e.Organisation).filter({ name: organisation1Name })\n+            organisation: e.get(e.Organisation).filter({ name: organisation1.name })\n           })\n         ]\n       }\n     })).run(client);\n"
                },
                {
                    "date": 1675877319198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n             role: \"member\",\n             invite_code: \"abc123\",\n             invite_status: true,\n             user: user,\n-            organisation: e.get(e.Organisation).filter({ name: organisation1.name })\n+            organisation: e.get(e.Organisation).filter({ name: organisation1.profile.name })\n           })\n         ]\n       }\n     })).run(client);\n"
                },
                {
                    "date": 1675877341709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n             role: \"member\",\n             invite_code: \"abc123\",\n             invite_status: true,\n             user: user,\n-            organisation: e.get(e.Organisation).filter({ name: organisation1.profile.name })\n+            organisation: organisation1)\n           })\n         ]\n       }\n     })).run(client);\n"
                },
                {
                    "date": 1675877427023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n             role: \"member\",\n             invite_code: \"abc123\",\n             invite_status: true,\n             user: user,\n-            organisation: organisation1)\n+            organisation: organisation1\n           })\n         ]\n       }\n     })).run(client);\n"
                },
                {
                    "date": 1675877930304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,15 @@\n             invite_code: \"abc123\",\n             invite_status: true,\n             user: user,\n             organisation: organisation1\n+          }),\n+          e.insert(e.OrganisationMember, {\n+            role: \"member\",\n+            invite_code: \"abc123\",\n+            invite_status: true,\n+            user: user,\n+            organisation: organisation2\n           })\n         ]\n       }\n     })).run(client);\n"
                },
                {
                    "date": 1675878420793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,15 @@\n   const userExisting = e.select(e.User, (u) => ({\n     filter: e.op(u.email, \"=\", email),\n   }));\n \n+  const organisationExisting1 = e.select(e.Organisation, (u) => ({\n+    filter: e.op(u.email, \"=\", email),\n+  }));\n+\n+  \n+\n+\n   // const organisationExisting = e.select(e.Organisation, (u) => ({\n   //   filter: e.op(u, \"=\", email)\n   // }));\n \n"
                },
                {
                    "date": 1675878445233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     filter: e.op(u.email, \"=\", email),\n   }));\n \n   const organisationExisting1 = e.select(e.Organisation, (u) => ({\n-    filter: e.op(u.email, \"=\", email),\n+    filter: e.op(u.name, \"=\", \"organisation 1\"),\n   }));\n \n   \n \n@@ -80,9 +80,9 @@\n     }).run(client);\n   \n   const organisation2 = e.insert(e.Organisation, {\n       profile: e.insert(e.OrganisationProfile, {\n-        name: \"Organization 2\",\n+        name: \"Organisation 2\",\n         address: \"Address 2\",\n         addressNr: \"2\",\n         city: \"City 2\",\n         postal: \"5678cd\"\n"
                },
                {
                    "date": 1675878455015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     filter: e.op(u.email, \"=\", email),\n   }));\n \n   const organisationExisting1 = e.select(e.Organisation, (u) => ({\n-    filter: e.op(u.name, \"=\", \"organisation 1\"),\n+    filter: e.op(u.name, \"=\", \"Organisation 1\"),\n   }));\n \n   \n \n@@ -70,9 +70,9 @@\n     .run(client);\n \n     const organisation1 = e.insert(e.Organisation, {\n       profile: e.insert(e.OrganisationProfile, {\n-        name: \"Organization 1\",\n+        name: \"Organisation 1\",\n         address: \"Address 1\",\n         addressNr: \"1\",\n         city: \"City 1\",\n         postal: \"1234ab\"\n"
                },
                {
                    "date": 1675878465754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,17 +97,11 @@\n             role: \"member\",\n             invite_code: \"abc123\",\n             invite_status: true,\n             user: user,\n-            organisation: organisation1\n+            organisation: organisationExisting1\n           }),\n-          e.insert(e.OrganisationMember, {\n-            role: \"member\",\n-            invite_code: \"abc123\",\n-            invite_status: true,\n-            user: user,\n-            organisation: organisation2\n-          })\n+        \n         ]\n       }\n     })).run(client);\n   \n"
                },
                {
                    "date": 1675878501533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,8 @@\n   const userExisting = e.select(e.User, (u) => ({\n     filter: e.op(u.email, \"=\", email),\n   }));\n \n-  const organisationExisting1 = e.select(e.Organisation, (u) => ({\n-    filter: e.op(u.name, \"=\", \"Organisation 1\"),\n-  }));\n-\n   \n \n \n   // const organisationExisting = e.select(e.Organisation, (u) => ({\n@@ -99,9 +95,8 @@\n             invite_status: true,\n             user: user,\n             organisation: organisationExisting1\n           }),\n-        \n         ]\n       }\n     })).run(client);\n   \n"
                },
                {
                    "date": 1677026378038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,133 +8,111 @@\n // todo\n \n // START SEEDS\n async function seed() {\n-  const email = \"user1@checkr.nl\";\n+\n   const pass = \"talkmate\";\n   const hash = await bcrypt.hash(pass, 10);\n+  const email = \"user1@checkr.nl\";\n+  const email_admin = \"admin@checkr.nl\";\n \n   const userExisting = e.select(e.User, (u) => ({\n     filter: e.op(u.email, \"=\", email),\n   }));\n \n-  \n-\n-\n-  // const organisationExisting = e.select(e.Organisation, (u) => ({\n-  //   filter: e.op(u, \"=\", email)\n-  // }));\n-\n   // cleanup the existing database\n   await e.delete(userExisting).run(client);\n-  // await e.delete(organisationExisting).run(client);\n-  await e.delete(e.Admin).run(client);\n-  await e.delete(e.AdminPassword).run(client);\n-  await e.delete(e.AdminProfile).run(client);\n-  await e.delete(e.User).run(client);\n-  await e.delete(e.UserPassword).run(client);\n-  await e.delete(e.UserProfile).run(client);\n-  await e.delete(e.Country).run(client);\n-  await e.delete(e.Organisation).run(client);\n-  await e.delete(e.OrganisationProfile).run(client);\n \n+\n+  //create admin with profile\n   const admin = e\n     .insert(e.Admin, {\n-      email: \"admin@checkr.nl\",\n+      email: email_admin,\n       password: e.insert(e.AdminPassword, {\n-        hash: hash,\n+        hash: hash\n       }),\n       profile: e.insert(e.AdminProfile, {\n         first_name: \"admin\",\n-        last_name: \"admin\",\n-      }),\n+        last_name: \"admin\"\n+      })\n     })\n     .run(client);\n \n-  const user = e\n-    .insert(e.User, {\n+\n+  //create the user\n+  const user = await\n+    e.insert(e.User, {\n       created_at: new Date(),\n       onboarded: false,\n       email: email,\n       password: e.insert(e.UserPassword, {\n-        hash: hash,\n+        hash: hash\n       }),\n       profile: e.insert(e.UserProfile, {\n         first_name: \"first_name\",\n-        last_name: \"last_name\",\n+        last_name: \"last_name\"\n       }),\n-    })\n-    .run(client);\n-\n-    const organisation1 = e.insert(e.Organisation, {\n-      profile: e.insert(e.OrganisationProfile, {\n-        name: \"Organisation 1\",\n-        address: \"Address 1\",\n-        addressNr: \"1\",\n-        city: \"City 1\",\n-        postal: \"1234ab\"\n+      organisation: e.insert(e.Organisation, {\n+        profile: e.insert(e.OrganisationProfile, {\n+          name: \"organistion #1\",\n+          address: \"address\",\n+          addressNr: \"addressNr\",\n+          postal: \"postal\",\n+          city: \"city\"\n+        }),\n+        subscription: e.insert(e.OrganisationSubscription, {\n+          customerId: \"customerId\",\n+          subscriptionId: \"subscriptionId\",\n+          planId: \"planId\",\n+          status: \"status\",\n+          currentPeriodStart: new Date(),\n+          currentPeriodEnd: new Date(),\n+          cancelAtPeriodEnd: false\n+        })\n       })\n-    }).run(client);\n-  \n-  const organisation2 = e.insert(e.Organisation, {\n-      profile: e.insert(e.OrganisationProfile, {\n-        name: \"Organisation 2\",\n-        address: \"Address 2\",\n-        addressNr: \"2\",\n-        city: \"City 2\",\n-        postal: \"5678cd\"\n-      })\n-    }).run(client);\n+    }).run(client)\n \n-    e.update(e.User, user => ({\n-      filter: e.op(user.email, '=', email),\n-      set: {\n-        organisations: [\n-          e.insert(e.OrganisationMember, {\n-            role: \"member\",\n-            invite_code: \"abc123\",\n-            invite_status: true,\n-            user: user,\n-            organisation: organisationExisting1\n-          }),\n-        ]\n-      }\n-    })).run(client);\n-  \n \n \n \n-\n-  // COUNTRIES\n+  // Create countries\n+  // seed list data in a loop\n   const countries = [\n     { name: \"United States\" },\n     { name: \"Canada\" },\n-    { name: \"Mexico\" },\n+    { name: \"Mexico\" }\n   ];\n   for (const country of countries) {\n+    {\n+      await e\n+        .insert(app::e.Country, {\n+          name: country.name\n+        })\n+        .run(client);\n+    }\n+  }\n+\n+  const notes = [\n+    {\n+      title: \"Note #1\",\n+      body: \"This is note #1 body\"\n+    },\n+    {\n+      title: \"Note #2\",\n+      body: \"This is note #2 body\"\n+    }\n+  ];\n+  for (const note of notes) {\n+    // here I want to link the note to the user.\n     await e\n-      .insert(e.Country, {\n-        name: country.name,\n+      .insert(e.Note, {\n+        title: note.title,\n+        body: note.body,\n+        user: userExisting\n       })\n       .run(client);\n   }\n \n-  //NOTES\n-  await e\n-    .set(\n-      e.insert(e.Note, {\n-        title: \"My first note MODIFIED\",\n-        body: \"Hello, world!\",\n-        user: userExisting,\n-      }),\n-      e.insert(e.Note, {\n-        title: \"My second note\",\n-        body: \"Hello, world!\",\n-        user: userExisting,\n-      })\n-    )\n-    .run(client);\n-\n   console.log(`Database has been seeded. 🌱`);\n }\n \n seed()\n"
                },
                {
                    "date": 1677026417367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n   ];\n   for (const country of countries) {\n     {\n       await e\n-        .insert(app::e.Country, {\n+        .insert(e.Country, {\n           name: country.name\n         })\n         .run(client);\n     }\n"
                },
                {
                    "date": 1677026467345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,11 +14,11 @@\n   const hash = await bcrypt.hash(pass, 10);\n   const email = \"user1@checkr.nl\";\n   const email_admin = \"admin@checkr.nl\";\n \n-  const userExisting = e.select(e.User, (u) => ({\n-    filter: e.op(u.email, \"=\", email),\n-  }));\n+  // const userExisting = e.select(e.User, (u) => ({\n+  //   filter: e.op(u.email, \"=\", email),\n+  // }));\n \n   // cleanup the existing database\n   await e.delete(userExisting).run(client);\n \n"
                },
                {
                    "date": 1677026588686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,14 +19,14 @@\n   //   filter: e.op(u.email, \"=\", email),\n   // }));\n \n   // cleanup the existing database\n-  await e.delete(userExisting).run(client);\n+  // await e.delete(userExisting).run(client);\n \n \n   //create admin with profile\n   const admin = e\n-    .insert(e.Admin, {\n+    .insert(core::Admin, {\n       email: email_admin,\n       password: e.insert(e.AdminPassword, {\n         hash: hash\n       }),\n"
                },
                {
                    "date": 1677026620633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,19 +24,19 @@\n \n \n   //create admin with profile\n   const admin = e\n-    .insert(core::Admin, {\n-      email: email_admin,\n-      password: e.insert(e.AdminPassword, {\n-        hash: hash\n-      }),\n-      profile: e.insert(e.AdminProfile, {\n-        first_name: \"admin\",\n-        last_name: \"admin\"\n-      })\n+  .insert(core::Admin, { \n+    email: email_admin,\n+    password: e.insert(my_module::AdminPassword, {\n+      hash: hash\n+    }),\n+    profile: e.insert(my_module::AdminProfile, {\n+      first_name: \"admin\",\n+      last_name: \"admin\"\n     })\n-    .run(client);\n+  })\n+  .run(client);\n \n \n   //create the user\n   const user = await\n"
                },
                {
                    "date": 1677026951247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,19 +24,19 @@\n \n \n   //create admin with profile\n   const admin = e\n-  .insert(core::Admin, { \n-    email: email_admin,\n-    password: e.insert(my_module::AdminPassword, {\n-      hash: hash\n-    }),\n-    profile: e.insert(my_module::AdminProfile, {\n-      first_name: \"admin\",\n-      last_name: \"admin\"\n+    .insert(e.Admin, {\n+      email: email_admin,\n+      password: e.insert(e.AdminPassword, {\n+        hash: hash\n+      }),\n+      profile: e.insert(e.AdminProfile, {\n+        first_name: \"admin\",\n+        last_name: \"admin\"\n+      })\n     })\n-  })\n-  .run(client);\n+    .run(client);\n \n \n   //create the user\n   const user = await\n"
                },
                {
                    "date": 1677027267584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   //create admin with profile\n   const admin = e\n     .insert(e.Admin, {\n       email: email_admin,\n-      password: e.insert(e.AdminPassword, {\n+      password: e.insert('core.e.AdminPassword, {\n         hash: hash\n       }),\n       profile: e.insert(e.AdminProfile, {\n         first_name: \"admin\",\n"
                },
                {
                    "date": 1677027281256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n   //create admin with profile\n   const admin = e\n     .insert(e.Admin, {\n       email: email_admin,\n-      password: e.insert('core.e.AdminPassword, {\n+      password: e.insert('core.e.AdminPassword', {\n         hash: hash\n       }),\n       profile: e.insert(e.AdminProfile, {\n         first_name: \"admin\",\n"
                },
                {
                    "date": 1677065390341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,110 +8,105 @@\n // todo\n \n // START SEEDS\n async function seed() {\n-\n   const pass = \"talkmate\";\n   const hash = await bcrypt.hash(pass, 10);\n   const email = \"user1@checkr.nl\";\n   const email_admin = \"admin@checkr.nl\";\n \n-  // const userExisting = e.select(e.User, (u) => ({\n-  //   filter: e.op(u.email, \"=\", email),\n-  // }));\n+  const userExisting = e.select(e.User, (u) => ({\n+    filter: e.op(u.email, \"=\", email),\n+  }));\n \n-  // cleanup the existing database\n-  // await e.delete(userExisting).run(client);\n+  cleanup the existing database\n+  await e.delete(userExisting).run(client);\n \n-\n   //create admin with profile\n   const admin = e\n     .insert(e.Admin, {\n       email: email_admin,\n-      password: e.insert('core.e.AdminPassword', {\n-        hash: hash\n+      password: e.insert(e.AdminPassword, {\n+        hash: hash,\n       }),\n       profile: e.insert(e.AdminProfile, {\n         first_name: \"admin\",\n-        last_name: \"admin\"\n-      })\n+        last_name: \"admin\",\n+      }),\n     })\n     .run(client);\n \n-\n   //create the user\n-  const user = await\n-    e.insert(e.User, {\n+  const user = await e\n+    .insert(e.User, {\n       created_at: new Date(),\n       onboarded: false,\n       email: email,\n       password: e.insert(e.UserPassword, {\n-        hash: hash\n+        hash: hash,\n       }),\n       profile: e.insert(e.UserProfile, {\n         first_name: \"first_name\",\n-        last_name: \"last_name\"\n+        last_name: \"last_name\",\n       }),\n       organisation: e.insert(e.Organisation, {\n         profile: e.insert(e.OrganisationProfile, {\n           name: \"organistion #1\",\n           address: \"address\",\n           addressNr: \"addressNr\",\n           postal: \"postal\",\n-          city: \"city\"\n+          city: \"city\",\n         }),\n         subscription: e.insert(e.OrganisationSubscription, {\n           customerId: \"customerId\",\n           subscriptionId: \"subscriptionId\",\n           planId: \"planId\",\n           status: \"status\",\n           currentPeriodStart: new Date(),\n           currentPeriodEnd: new Date(),\n-          cancelAtPeriodEnd: false\n-        })\n-      })\n-    }).run(client)\n+          cancelAtPeriodEnd: false,\n+        }),\n+      }),\n+    })\n+    .run(client);\n \n-\n-\n-\n   // Create countries\n   // seed list data in a loop\n   const countries = [\n     { name: \"United States\" },\n     { name: \"Canada\" },\n-    { name: \"Mexico\" }\n+    { name: \"Mexico\" },\n   ];\n   for (const country of countries) {\n     {\n       await e\n         .insert(e.Country, {\n-          name: country.name\n+          name: country.name,\n         })\n         .run(client);\n     }\n   }\n \n-  const notes = [\n-    {\n-      title: \"Note #1\",\n-      body: \"This is note #1 body\"\n-    },\n-    {\n-      title: \"Note #2\",\n-      body: \"This is note #2 body\"\n-    }\n-  ];\n-  for (const note of notes) {\n-    // here I want to link the note to the user.\n-    await e\n-      .insert(e.Note, {\n-        title: note.title,\n-        body: note.body,\n-        user: userExisting\n-      })\n-      .run(client);\n-  }\n+  // const notes = [\n+  //   {\n+  //     title: \"Note #1\",\n+  //     body: \"This is note #1 body\",\n+  //   },\n+  //   {\n+  //     title: \"Note #2\",\n+  //     body: \"This is note #2 body\",\n+  //   },\n+  // ];\n+  // for (const note of notes) {\n+  //   // here I want to link the note to the user.\n+  //   await e\n+  //     .insert(e.Note, {\n+  //       title: note.title,\n+  //       body: note.body,\n+  //       user: userExisting,\n+  //     })\n+  //     .run(client);\n+  // }\n \n   console.log(`Database has been seeded. 🌱`);\n }\n \n"
                },
                {
                    "date": 1677065408339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   const userExisting = e.select(e.User, (u) => ({\n     filter: e.op(u.email, \"=\", email),\n   }));\n \n-  cleanup the existing database\n+  //cleanup the existing database\n   await e.delete(userExisting).run(client);\n \n   //create admin with profile\n   const admin = e\n@@ -85,28 +85,28 @@\n         .run(client);\n     }\n   }\n \n-  // const notes = [\n-  //   {\n-  //     title: \"Note #1\",\n-  //     body: \"This is note #1 body\",\n-  //   },\n-  //   {\n-  //     title: \"Note #2\",\n-  //     body: \"This is note #2 body\",\n-  //   },\n-  // ];\n-  // for (const note of notes) {\n-  //   // here I want to link the note to the user.\n-  //   await e\n-  //     .insert(e.Note, {\n-  //       title: note.title,\n-  //       body: note.body,\n-  //       user: userExisting,\n-  //     })\n-  //     .run(client);\n-  // }\n+  const notes = [\n+    {\n+      title: \"Note #1\",\n+      body: \"This is note #1 body\",\n+    },\n+    {\n+      title: \"Note #2\",\n+      body: \"This is note #2 body\",\n+    },\n+  ];\n+  for (const note of notes) {\n+    // here I want to link the note to the user.\n+    await e\n+      .insert(e.Note, {\n+        title: note.title,\n+        body: note.body,\n+        user: userExisting,\n+      })\n+      .run(client);\n+  }\n \n   console.log(`Database has been seeded. 🌱`);\n }\n \n"
                },
                {
                    "date": 1677065479046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,24 @@\n       }),\n     })\n     .run(client);\n \n+  //create the organisation\n+  const organisation = await e\n+  .insert(e.Organisation, {\n+  \n+    name: \"Checkr\",\n+    email: \"checkr@checkr.nl\",\n+    password: e.insert(e.OrganisationPassword, {\n+      hash: hash,\n+    }),\n+    profile: e.insert(e.OrganisationProfile, {\n+      first_name: \"Checkr\",\n+      last_name: \"Checkr\",\n+    }),\n+    admin: e.insert(e.OrganisationAdmin, {\n+  })\n+\n   //create the user\n   const user = await e\n     .insert(e.User, {\n       created_at: new Date(),\n"
                },
                {
                    "date": 1677065489416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,8 +49,9 @@\n       last_name: \"Checkr\",\n     }),\n     admin: e.insert(e.OrganisationAdmin, {\n   })\n+  .run(client)\n \n   //create the user\n   const user = await e\n     .insert(e.User, {\n"
                },
                {
                    "date": 1677065495782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n \n   //create the organisation\n   const organisation = await e\n   .insert(e.Organisation, {\n-  \n+\n     name: \"Checkr\",\n     email: \"checkr@checkr.nl\",\n     password: e.insert(e.OrganisationPassword, {\n       hash: hash,\n@@ -49,9 +49,9 @@\n       last_name: \"Checkr\",\n     }),\n     admin: e.insert(e.OrganisationAdmin, {\n   })\n-  .run(client)\n+  .run(client);\n \n   //create the user\n   const user = await e\n     .insert(e.User, {\n"
                },
                {
                    "date": 1677065554314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,14 +37,8 @@\n \n   //create the organisation\n   const organisation = await e\n   .insert(e.Organisation, {\n-\n-    name: \"Checkr\",\n-    email: \"checkr@checkr.nl\",\n-    password: e.insert(e.OrganisationPassword, {\n-      hash: hash,\n-    }),\n     profile: e.insert(e.OrganisationProfile, {\n       first_name: \"Checkr\",\n       last_name: \"Checkr\",\n     }),\n"
                },
                {
                    "date": 1677067794285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,18 +35,32 @@\n     })\n     .run(client);\n \n   //create the organisation\n-  const organisation = await e\n-  .insert(e.Organisation, {\n-    profile: e.insert(e.OrganisationProfile, {\n-      first_name: \"Checkr\",\n-      last_name: \"Checkr\",\n-    }),\n-    admin: e.insert(e.OrganisationAdmin, {\n-  })\n-  .run(client);\n+  const organisation1 = await e\n+    .insert(e.Organisation, {\n+      profile: e.insert(e.OrganisationProfile, {\n+        name: \"organisation #1\",\n+        address: \"address\",\n+        addressNr: \"12\",\n+        city: \"City\",\n+        postal: \"1234AB\",\n+      }),\n+    })\n+    .run(client);\n \n+  const organisation2 = await e\n+    .insert(e.Organisation, {\n+      profile: e.insert(e.OrganisationProfile, {\n+        name: \"organisation #2\",\n+        address: \"address\",\n+        addressNr: \"12\",\n+        city: \"City\",\n+        postal: \"1234AB\",\n+      }),\n+    })\n+    .run(client);\n+\n   //create the user\n   const user = await e\n     .insert(e.User, {\n       created_at: new Date(),\n@@ -57,30 +71,34 @@\n       }),\n       profile: e.insert(e.UserProfile, {\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n-      }),\n-      organisation: e.insert(e.Organisation, {\n-        profile: e.insert(e.OrganisationProfile, {\n-          name: \"organistion #1\",\n-          address: \"address\",\n-          addressNr: \"addressNr\",\n-          postal: \"postal\",\n-          city: \"city\",\n-        }),\n-        subscription: e.insert(e.OrganisationSubscription, {\n-          customerId: \"customerId\",\n-          subscriptionId: \"subscriptionId\",\n-          planId: \"planId\",\n-          status: \"status\",\n-          currentPeriodStart: new Date(),\n-          currentPeriodEnd: new Date(),\n-          cancelAtPeriodEnd: false,\n-        }),\n-      }),\n+      })\n     })\n     .run(client);\n \n+  //attach the user to the organisation\n+\n+  // const user = await e\n+  //   .insert(e.User, {\n+  //\n+  //     organisations: e.insert(e.UserOrganisation, {\n+  //       organisation\n+  //     })\n+  //   }\n+  // const userOrgLink = await e\n+  //   .createLink({\n+  //     source: user,\n+  //     target: organisation1,\n+  //     link: e.User.organisations,\n+  //     data: {\n+  //       role: \"member\",\n+  //       invite_code: \"some_code\",\n+  //       invite_status: true,\n+  //     },\n+  //   })\n+  //   .run(client);\n+\n   // Create countries\n   // seed list data in a loop\n   const countries = [\n     { name: \"United States\" },\n"
                },
                {
                    "date": 1677067808071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,14 +37,24 @@\n \n   //create the organisation\n   const organisation1 = await e\n     .insert(e.Organisation, {\n-      profile: e.insert(e.OrganisationProfile, {\n-        name: \"organisation #1\",\n-        address: \"address\",\n-        addressNr: \"12\",\n-        city: \"City\",\n-        postal: \"1234AB\",\n+        profile: e.insert(e.OrganisationProfile, {\n+          name: \"organistion #1\",\n+          address: \"address\",\n+          addressNr: \"addressNr\",\n+          postal: \"postal\",\n+          city: \"city\",\n+        }),\n+        subscription: e.insert(e.OrganisationSubscription, {\n+          customerId: \"customerId\",\n+          subscriptionId: \"subscriptionId\",\n+          planId: \"planId\",\n+          status: \"status\",\n+          currentPeriodStart: new Date(),\n+          currentPeriodEnd: new Date(),\n+          cancelAtPeriodEnd: false,\n+        }),\n       }),\n     })\n     .run(client);\n \n"
                },
                {
                    "date": 1677067845132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,25 +37,24 @@\n \n   //create the organisation\n   const organisation1 = await e\n     .insert(e.Organisation, {\n-        profile: e.insert(e.OrganisationProfile, {\n-          name: \"organistion #1\",\n-          address: \"address\",\n-          addressNr: \"addressNr\",\n-          postal: \"postal\",\n-          city: \"city\",\n-        }),\n-        subscription: e.insert(e.OrganisationSubscription, {\n-          customerId: \"customerId\",\n-          subscriptionId: \"subscriptionId\",\n-          planId: \"planId\",\n-          status: \"status\",\n-          currentPeriodStart: new Date(),\n-          currentPeriodEnd: new Date(),\n-          cancelAtPeriodEnd: false,\n-        }),\n+      profile: e.insert(e.OrganisationProfile, {\n+        name: \"organistion #1\",\n+        address: \"address\",\n+        addressNr: \"addressNr\",\n+        postal: \"postal\",\n+        city: \"city\",\n       }),\n+      subscription: e.insert(e.OrganisationSubscription, {\n+        customerId: \"customerId\",\n+        subscriptionId: \"subscriptionId\",\n+        planId: \"planId\",\n+        status: \"status\",\n+        currentPeriodStart: new Date(),\n+        currentPeriodEnd: new Date(),\n+        cancelAtPeriodEnd: false,\n+      }),\n     })\n     .run(client);\n \n   const organisation2 = await e\n@@ -81,9 +80,9 @@\n       }),\n       profile: e.insert(e.UserProfile, {\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n-      })\n+      }),\n     })\n     .run(client);\n \n   //attach the user to the organisation\n"
                },
                {
                    "date": 1677067893433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,14 +59,23 @@\n \n   const organisation2 = await e\n     .insert(e.Organisation, {\n       profile: e.insert(e.OrganisationProfile, {\n-        name: \"organisation #2\",\n+        name: \"organistion #1\",\n         address: \"address\",\n-        addressNr: \"12\",\n-        city: \"City\",\n-        postal: \"1234AB\",\n+        addressNr: \"addressNr\",\n+        postal: \"postal\",\n+        city: \"city\",\n       }),\n+      subscription: e.insert(e.OrganisationSubscription, {\n+        customerId: \"customerId\",\n+        subscriptionId: \"subscriptionId\",\n+        planId: \"planId\",\n+        status: \"status\",\n+        currentPeriodStart: new Date(),\n+        currentPeriodEnd: new Date(),\n+        cancelAtPeriodEnd: false,\n+      }),\n     })\n     .run(client);\n \n   //create the user\n"
                },
                {
                    "date": 1677067928883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,8 +93,10 @@\n       }),\n     })\n     .run(client);\n \n+    \n+\n   //attach the user to the organisation\n \n   // const user = await e\n   //   .insert(e.User, {\n"
                },
                {
                    "date": 1677067945514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,12 +93,13 @@\n       }),\n     })\n     .run(client);\n \n-    \n \n+\n   //attach the user to the organisation\n \n+  \n   // const user = await e\n   //   .insert(e.User, {\n   //\n   //     organisations: e.insert(e.UserOrganisation, {\n"
                },
                {
                    "date": 1677071097909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,16 +90,20 @@\n       profile: e.insert(e.UserProfile, {\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n       }),\n+      organisation: => ({\n+        ...e.Organisation['*'], \n+        filter: e.op(e.uuid(userId), \"in\", org.users.id),\n+      })\n     })\n     .run(client);\n \n \n \n   //attach the user to the organisation\n \n-  \n+\n   // const user = await e\n   //   .insert(e.User, {\n   //\n   //     organisations: e.insert(e.UserOrganisation, {\n"
                },
                {
                    "date": 1677071114531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n       profile: e.insert(e.UserProfile, {\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n       }),\n-      organisation: => ({\n+      org => ({\n         ...e.Organisation['*'], \n         filter: e.op(e.uuid(userId), \"in\", org.users.id),\n       })\n     })\n"
                },
                {
                    "date": 1677071236564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,11 +90,10 @@\n       profile: e.insert(e.UserProfile, {\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n       }),\n-      org => ({\n-        ...e.Organisation['*'], \n-        filter: e.op(e.uuid(userId), \"in\", org.users.id),\n+      org: e.select(e.Organisation, {\n+        where: e.op(e.uuid(userId), \"in\", e.Organisation.users.id),\n       })\n     })\n     .run(client);\n \n"
                },
                {
                    "date": 1677071517404,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n       }),\n       org: e.select(e.Organisation, {\n-        where: e.op(e.uuid(userId), \"in\", e.Organisation.users.id),\n+        where: e.op(e.uuid(userExisting), \"in\", e.Organisation.users.id),\n       })\n     })\n     .run(client);\n \n"
                },
                {
                    "date": 1677071734837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n       }),\n       org: e.select(e.Organisation, {\n-        where: e.op(e.uuid(userExisting), \"in\", e.Organisation.users.id),\n+        where: e.op(e.uuid(userExisting.id), \"in\", e.Organisation.users.id),\n       })\n     })\n     .run(client);\n \n"
                },
                {
                    "date": 1677071823318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,11 +90,8 @@\n       profile: e.insert(e.UserProfile, {\n         first_name: \"first_name\",\n         last_name: \"last_name\",\n       }),\n-      org: e.select(e.Organisation, {\n-        where: e.op(e.uuid(userExisting.id), \"in\", e.Organisation.users.id),\n-      })\n     })\n     .run(client);\n \n \n"
                },
                {
                    "date": 1677071842870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,17 @@\n     })\n     .run(client);\n \n \n+    const user1 = e.select(e.User, (u) => ({\n+      filter: e.op(u.email, \"=\", email),\n+    }));\n \n+    org: e.select(e.Organisation, {\n+      where: e.op(e.uuid(userExisting.id), \"in\", e.Organisation.users.id),\n+    })\n+\n+\n   //attach the user to the organisation\n \n \n   // const user = await e\n"
                },
                {
                    "date": 1677071862553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,13 +98,10 @@\n     const user1 = e.select(e.User, (u) => ({\n       filter: e.op(u.email, \"=\", email),\n     }));\n \n-    org: e.select(e.Organisation, {\n-      where: e.op(e.uuid(userExisting.id), \"in\", e.Organisation.users.id),\n-    })\n+  \n \n-\n   //attach the user to the organisation\n \n \n   // const user = await e\n"
                },
                {
                    "date": 1677072142136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,11 +94,8 @@\n     })\n     .run(client);\n \n \n-    const user1 = e.select(e.User, (u) => ({\n-      filter: e.op(u.email, \"=\", email),\n-    }));\n \n   \n \n   //attach the user to the organisation\n"
                },
                {
                    "date": 1677072640333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,9 +56,9 @@\n       }),\n     })\n     .run(client);\n \n-  const organisation2 = await e\n+    const organisation2 = await e\n     .insert(e.Organisation, {\n       profile: e.insert(e.OrganisationProfile, {\n         name: \"organistion #1\",\n         address: \"address\",\n@@ -77,8 +77,9 @@\n       }),\n     })\n     .run(client);\n \n+\n   //create the user\n   const user = await e\n     .insert(e.User, {\n       created_at: new Date(),\n@@ -93,15 +94,10 @@\n       }),\n     })\n     .run(client);\n \n-\n-\n-  \n-\n   //attach the user to the organisation\n \n-\n   // const user = await e\n   //   .insert(e.User, {\n   //\n   //     organisations: e.insert(e.UserOrganisation, {\n"
                }
            ],
            "date": 1675781573137,
            "name": "Commit-0",
            "content": "//@ts-ignore-all\nimport bcrypt from \"bcryptjs\";\nimport { client, e } from \"app/db.server\";\n\n\n// METHODS\n// todo\n\n// START SEEDS\nasync function seed() {\n  const email = \"user@tester.com\";\n  const pass = \"talkmate\";\n  const hash = await bcrypt.hash(pass, 10);\n\n  // const userExisting = e.select(e.User, (u) => ({\n  //   filter: e.op(u.email, \"=\", email),\n  // }));\n\n  // cleanup the existing database\n  // await e.delete(userExisting).run(client);\n\n  await e.delete(e.User).run(client);\n  await e.delete(e.Country).run(client);\n  await e.delete(e.Admin).run(client);\n  await e.delete(e.AdminProfile).run(client);\n  await e.delete(e.Organisation).run(client);\n  await e.delete(e.OrganisationProfile).run(client);\n  await e.delete(e.OrganisationTeam).run(client);\n\n  // ADMIN\n  await e\n    .insert(e.AdminPassword, {\n      hash,\n      admin: e.insert(e.Admin, {\n        email: \"admin@tester.com\"\n      })\n    })\n    .run(client);\n\n\n  const user = await e.insert(e.User, {\n    created_at: new Date(),\n    onboarded: false,\n    email: email\n  });\n\n  await e.set(\n    e.insert(e.Password, {\n      hash,\n      user: user\n    }),\n    e.insert(e.UserProfile, {\n      first_name: \"first_name\",\n      last_name: \"last_name\",\n      user: user\n    }),\n  ).run(client)\n\n\n\n  // ORGANISATION\n  // create an organisation with organisation profile\n  await e\n    .insert(e.Organisation, {\n      name: \"checkr\"\n    })\n    .run(client);\n\n\n  // TEMP\n  // COUNTRIES\n  const countries = [\n    { name: \"United States\" },\n    { name: \"Canada\" },\n    { name: \"Mexico\" }\n  ];\n  for (const country of countries) {\n    await e\n      .insert(e.Country, {\n        name: country.name\n      })\n      .run(client);\n  }\n\n  //NOTES\n  await e\n    .set(\n      e.insert(e.Note, {\n        title: \"My first note MODIFIED\",\n        body: \"Hello, world!\",\n        user\n      }),\n      e.insert(e.Note, {\n        title: \"My second note\",\n        body: \"Hello, world!\",\n        user\n      })\n    )\n    .run(client);\n\n\n  console.log(`Database has been seeded. 🌱`);\n}\n\nseed()\n  .catch((e) => {\n    console.error(e);\n    process.exit(1);\n  })\n  .finally(async () => {\n    client.close();\n  });\n"
        }
    ]
}